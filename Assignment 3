- [ ] 3.1.11 Section Review, Questions 1, 2, 3, 4
1. Using the value –35, write it as an integer literal in decimal, hexadecimal, octal, and binary
formats that are consistent with MASM syntax.
  -35d, DDh, 335o, 11011101b

2. (Yes/No): Is A5h a valid hexadecimal literal?
  No

3. (Yes/No): Does the multiplication operator (*) have a higher precedence than the division
operator (/) in integer expressions?
  No

4. Create a single integer expression that uses all the operators from Section 3.1.2. Calculate
the value of the expression.
  30 MOD (3 * 4) + (3 – 1) / 2 = 20

- [ ] 3.2.4 Section Review, Questions 4, 5
4. In the AddTwo program, which register holds the sum?
  EAX

5. In the AddTwo program, which statement halts the program?
  INVOKE ExitProcess,0

- [ ] 3.3.3 Section Review, Questions 1, 2, 3, 4
1. What types of files are produced by the assembler?
  Object (.OBJ) and Listing (.LST)

2. (True/False): The linker extracts assembled procedures from the link library and inserts
them in the executable program.
  True

3. (True/False): When a program’s source code is modified, it must be assembled and linked
again before it can be executed with the changes.
  True

4. Which operating system component reads and executes programs?
  Loader

- [ ] 3.4.13 Section Review, Questions 1, 2, 3, 4, 5
1. Create an uninitialized data declaration for a 16-bit signed integer.
  var1 SWORD ?

2. Create an uninitialized data declaration for an 8-bit unsigned integer.
  var2 BYTE ?

3. Create an uninitialized data declaration for an 8-bit signed integer.
  var3 SBYTE ?

4. Create an uninitialized data declaration for a 64-bit integer.
  var4 QWORD ?

5. Which data type can hold a 32-bit signed integer?
  SDWORD

- [ ] 3.5.5 Section Review Question 3
3. Write a statement that causes the assembler to calculate the number of bytes in the following
array, and assign the value to a symbolic constant named ArraySize:
myArray WORD 20 DUP(?)
  ArraySize = ($ - myArray)

- [ ] 3.9.1 Short Answer, Questions 4, 5, 6, 25
4. Explain why the term assembler language is not quite correct.
  Assembler means the program that translates your source code. A more correct term is "assembly language"

5. Explain the difference between big endian and little endian. Also, look up the origins of this
term on the Web.
  Little endian places the least significant bit in position 0, on the right side of the number. Big endian does the opposite.
  "The terms big-endian and little-endian were introduced by Danny Cohen in 1980 in Internet Engineering Note 137, 
  a memorandum entitled "On Holy Wars and a Plea for Peace", subsequently published in print form in IEEE Computer 14(10).48-57 (1981). 
  He borrowed them from Jonathan Swift, who in Gulliver's Travels (1726) used them to describe the opposing positions of two 
  factions in the nation of Lilliput. The Big-Endians, who broke their boiled eggs at the big end, rebelled against the king, 
  who demanded that his subjects break their eggs at the little end." - SOURCE
  (http://www.ling.upenn.edu/courses/Spring_2003/ling538/Lecnotes/ADfn1.htm)

6. Why might you use a symbolic constant rather than an integer literal in your code?
  An integer literal, such as 35, has no direct meaning to someone reading the program's source code.
  Instead, a symbolic constant such as MIN_CAPACITY can be assigned an integer value, and is self documenting.

25. Which data directive creates a 32-bit signed integer variable?
  SDWORD

- [ ] 3.9.2 Algorithm Workbench, Questions 4, 7, 13
4. Find out if you can declare a variable of type DWORD and assign it a negative
value. What does this tell you about the assembler’s type checking?
  You cannot store a negative value (anything less than 0) in DWORD.

7. Declare an array of 120 uninitialized unsigned doubleword values.
  myArray DWORD 120 DUP(?) 

13. Declare a string variable containing the word “TEST” repeated 500 times.
  myTestString BYTE 500 DUP("TEST")

- [ ] 3.10 Programming Exercises, Pick any 1 exercise
1. Integer Expression Calculation
Using the AddTwo program from Section 3.2 as a reference, write a program that calculates the
following expression, using registers: A = (A + B) − (C + D). Assign integer values to the EAX,
EBX, ECX, and EDX registers.
  ; AddTwo.asm - adds two 32-bit integers
  ; Chapter 3 example

  .386
  .model flat,stdcall
  .stack 4096
  ExitProcess PROTO, dwExitCode:DWORD
  
  .data
  A DWORD 150
  B DWORD 100
  C DWORD 50
  D DWORD 40

  .code
  main PROC
  mov eax, A
  mov ebx, B
  mov ecx, C
  mov edx, D
  
  add eax, ebx
  add ecx, edx
  sub eax, ecx
  mov A, eax

  INVOKE ExitProcess,0
  main ENDP
  END main


- [ ] Upload your assignment to GitHub
- [ ] Email james.wilson@rccd.edu with the url to the source code on GitHub	

** 24 Possible Points (1 for each question) ***
